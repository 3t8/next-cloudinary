{"version":3,"file":"next-cloudinary.modern.mjs","sources":["../src/plugins/cropping.js","../src/plugins/effects.js","../src/constants/qualifiers.js","../src/plugins/overlays.js","../src/plugins/raw-transformations.js","../src/plugins/remove-background.js","../src/plugins/underlays.js","../src/plugins/zoompan.js","../src/lib/cloudinary.js","../src/loaders/cloudinary-loader.js","../src/components/CldImage/CldImage.js","../src/components/CldOgImage/CldOgImage.js"],"sourcesContent":["const cropsGravityAuto = [ 'crop', 'fill', 'lfill', 'fill_pad', 'thumb' ];\n\nexport const props = ['crop', 'gravity'];\n\nexport function plugin({ cldImage, options } = {}) {\n  const { width, height, crop = 'limit', gravity } = options;\n\n  let transformationString = `c_${crop},w_${width}`;\n\n  if ( !gravity && cropsGravityAuto.includes(crop) ) {\n    gravity = 'auto';\n  }\n\n  if ( !['limit'].includes(crop) ) {\n    transformationString = `${transformationString},h_${height}`;\n  }\n\n  if ( gravity ) {\n    if ( gravity === 'auto' && !cropsGravityAuto.includes(crop) ) {\n      console.warn('Auto gravity can only be used with crop, fill, lfill, fill_pad or thumb. Not applying gravity.');\n    } else {\n      transformationString = `${transformationString},g_${gravity}`;\n    }\n  }\n\n  cldImage.resize(transformationString);\n}","const params = [\n  'art',\n  {\n    prop: 'autoBrightness',\n    effect: 'auto_brightness',\n  },\n  {\n    prop: 'autoColor',\n    effect: 'auto_color',\n  },\n  {\n    prop: 'autoContrast',\n    effect: 'auto_contrast',\n  },\n  {\n    prop: 'assistColorblind',\n    effect: 'assist_colorblind',\n  },\n  'blackwhite',\n  'blur',\n  {\n    prop: 'blurFaces',\n    effect: 'blur_faces',\n  },\n  {\n    prop: 'blurRegion',\n    effect: 'blur_region',\n  },\n  'brightness',\n  {\n    prop: 'brightnessHSB',\n    effect: 'brightness_hsb',\n  },\n  'cartoonify',\n  'colorize',\n  'contrast',\n  'distort',\n  {\n    prop: 'fillLight',\n    effect: 'fill_light',\n  },\n  'gamma',\n  {\n    prop: 'gradientFade',\n    effect: 'gradient_fade',\n  },\n  'grayscale',\n  'improve',\n  'negate',\n  {\n    prop: 'oilPaint',\n    effect: 'oil_paint',\n  },\n  'outline',\n  'pixelate',\n  {\n    prop: 'pixelateFaces',\n    effect: 'pixelate_faces',\n  },\n  {\n    prop: 'pixelateRegion',\n    effect: 'pixelate_region',\n  },\n  'redeye',\n  {\n    prop: 'replaceColor',\n    effect: 'replace_color',\n  },\n  'saturation',\n  'sepia',\n  'shadow',\n  'sharpen',\n  'shear',\n  {\n    prop: 'simulateColorblind',\n    effect: 'simulate_colorblind',\n  },\n  'tint',\n  {\n    prop: 'unsharpMask',\n    effect: 'unsharp_mask',\n  },\n  'vectorize',\n  'vibrance',\n  'vignette',\n];\n\nexport const props = params.map(param => param.prop || param);\n\nexport function plugin({ cldImage, options } = {}) {\n  params.forEach(key => {\n    const prop = key.prop || key;\n    const effect = key.effect || key;\n\n    if ( options[prop] === true ) {\n      cldImage.effect(`e_${effect}`);\n    } else if ( typeof options[prop] === 'string' ) {\n      cldImage.effect(`e_${effect}:${options[prop]}`);\n    }\n  });\n}","// aspectRatio\n\nexport const primary = {\n  aspectRatio: {\n    qualifier: 'ar'\n  },\n  crop: {\n    qualifier: 'c'\n  },\n  gravity: {\n    qualifier: 'g'\n  },\n  height: {\n    qualifier: 'h'\n  },\n  width: {\n    qualifier: 'w'\n  },\n};\n\nexport const position = {\n  angle: {\n    qualifier: 'a'\n  },\n  gravity: {\n    qualifier: 'g'\n  },\n  x: {\n    qualifier: 'x'\n  },\n  y: {\n    qualifier: 'y'\n  },\n}\n\nexport const text = {\n  color: {\n    qualifier: 'co',\n    location: 'primary'\n  },\n  fontFamily: {\n    qualifier: false\n  },\n  fontSize: {\n    qualifier: false\n  },\n  fontWeight: {\n    qualifier: false\n  },\n  letterSpacing: {\n    qualifier: 'letter_spacing'\n  },\n  textDecoration: {\n    qualifier: false\n  }\n}","import {\n  primary as qualifiersPrimary,\n  text as qualifiersText,\n  position as qualifiersPosition\n} from '../constants/qualifiers';\n\nexport const props = ['overlays'];\n\nexport const DEFAULT_TEXT_OPTIONS = {\n  color: 'black',\n  fontFamily: 'Arial',\n  fontSize: 200,\n  fontWeight: 'bold',\n};\n\nexport function plugin({ cldImage, options } = {}) {\n  const { overlays = [] } = options;\n\n  const type = 'overlay';\n  const typeQualifier = 'l';\n\n  overlays.forEach(({ publicId, position, text, effects: layerEffects = [], ...options }) => {\n    const hasPublicId = typeof publicId === 'string';\n    const hasText = typeof text === 'object' || typeof text === 'string';\n    const hasPosition = typeof position === 'object';\n\n    if ( !hasPublicId && !hasText ) {\n      console.warn(`An ${type} is missing Public ID or Text`);\n      return;\n    }\n\n    // Start to construct the transformation string using text or the public ID\n    // if it's image-based\n\n    let layerTransformation;\n\n    if ( hasText ) {\n      layerTransformation = `${typeQualifier}_text`;\n    } else {\n      layerTransformation = `${typeQualifier}_${publicId.replace(/\\//g, ':')}`;\n    }\n\n    // Begin organizing transformations based on what it is and the location\n    // it needs to be placed in the URL\n\n    const primary = [];\n    const applied = [];\n\n    // Gemeral options\n\n    Object.keys(options).forEach(key => {\n      if ( !qualifiersPrimary[key] ) return;\n      const { qualifier } = qualifiersPrimary[key];\n      primary.push(`${qualifier}_${options[key]}`);\n    });\n\n    // Layer effects\n\n    layerEffects.forEach(effect => {\n      Object.keys(effect).forEach(key => {\n        if ( !qualifiersPrimary[key] ) return;\n        const { qualifier } = qualifiersPrimary[key];\n        primary.push(`${qualifier}_${effect[key]}`);\n      });\n    });\n\n    // Text styling\n\n    if ( hasText ) {\n      if ( typeof text === 'string' ) {\n        text = {\n          ...DEFAULT_TEXT_OPTIONS,\n          text\n        }\n      }\n\n\n      const textTransformations = [];\n\n      Object.keys(text).forEach(key => {\n        if ( !qualifiersText[key] ) return;\n\n        const { qualifier, location } = qualifiersText[key];\n\n        if ( location === 'primary' ) {\n          primary.push(`${qualifier}_${text[key]}`);\n        } else {\n          textTransformations.push(text[key]);\n        }\n      });\n\n      layerTransformation = `${layerTransformation}:${textTransformations.join('_')}:${text.text}`\n    }\n\n    // Positioning\n\n    if ( hasPosition ) {\n      Object.keys(position).forEach(key => {\n        if ( !qualifiersPosition[key] ) return;\n\n        const { qualifier } = qualifiersPosition[key];\n\n        applied.push(`${qualifier}_${position[key]}`);\n      });\n    }\n\n    // Add all primary transformations\n\n    layerTransformation = `${layerTransformation},${primary.join(',')}`;\n\n    // Add all applied transformations\n\n    layerTransformation = `${layerTransformation}/fl_layer_apply,fl_no_overflow`;\n\n    if ( applied.length > 0 ) {\n      layerTransformation = `${layerTransformation},${applied.join(',')}`;\n    }\n\n    // Finally add it to the image\n\n    cldImage.addTransformation(layerTransformation);\n  });\n}","export const props = ['rawTransformations'];\n\nexport function plugin({ cldImage, options } = {}) {\n  const { rawTransformations = [] } = options;\n\n  rawTransformations.forEach(transformation => {\n    cldImage.addTransformation(transformation);\n  });\n}","export const props = ['removeBackground'];\n\nexport function plugin({ cldImage, options } = {}) {\n  const { removeBackground = false } = options;\n  if ( removeBackground ) {\n    cldImage.effect('e_background_removal');\n  }\n}","import {\n  primary as qualifiersPrimary,\n  text as qualifiersText,\n  position as qualifiersPosition\n} from '../constants/qualifiers';\n\nexport const props = ['underlays'];\n\nexport function plugin({ cldImage, options } = {}) {\n  const { underlays = [] } = options;\n\n  const type = 'underlay';\n  const typeQualifier = 'u';\n\n  underlays.forEach(({ publicId, type, position, text, effects: layerEffects = [], ...options }) => {\n    const hasPublicId = typeof publicId === 'string';\n    const hasPosition = typeof position === 'object';\n\n    if ( !hasPublicId ) {\n      console.warn(`An ${type} is missing a Public ID`);\n      return;\n    }\n\n    // Start to construct the transformation string using text or the public ID\n    // if it's image-based\n\n    let layerTransformation = `${typeQualifier}_${publicId.replace(/\\//g, ':')}`;\n\n    // Begin organizing transformations based on what it is and the location\n    // it needs to be placed in the URL\n\n    const primary = [];\n    const applied = [];\n\n    // Gemeral options\n\n    Object.keys(options).forEach(key => {\n      if ( !qualifiersPrimary[key] ) return;\n      const { qualifier } = qualifiersPrimary[key];\n      primary.push(`${qualifier}_${options[key]}`);\n    });\n\n    // Layer effects\n\n    layerEffects.forEach(effect => {\n      Object.keys(effect).forEach(key => {\n        if ( !qualifiersPrimary[key] ) return;\n        const { qualifier } = qualifiersPrimary[key];\n        primary.push(`${qualifier}_${effect[key]}`);\n      });\n    });\n\n    // Positioning\n\n    if ( hasPosition ) {\n      Object.keys(position).forEach(key => {\n        if ( !qualifiersPosition[key] ) return;\n\n        const { qualifier } = qualifiersPosition[key];\n\n        applied.push(`${qualifier}_${position[key]}`);\n      });\n    }\n\n    // Add all primary transformations\n\n    layerTransformation = `${layerTransformation},${primary.join(',')}`;\n\n    // Add all applied transformations\n\n    layerTransformation = `${layerTransformation}/fl_layer_apply`;\n\n    if ( applied.length > 0 ) {\n      layerTransformation = `${layerTransformation},${applied.join(',')}`;\n    }\n\n    // Finally add it to the image\n\n    cldImage.addTransformation(layerTransformation);\n  });\n}","export const props = ['zoompan'];\n\nexport function plugin({ cldImage, options } = {}) {\n  const { zoompan = false } = options;\n  const overrides = {};\n\n  if ( zoompan === true ) {\n    cldImage.effect('e_zoompan');\n  } else if ( typeof zoompan === 'string' ) {\n    if ( zoompan === 'loop' ) {\n      cldImage.effect('e_zoompan');\n      cldImage.effect('e_loop');\n    } else {\n      cldImage.effect(`e_zoompan:${zoompan}`);\n    }\n  } else if ( typeof zoompan === 'object' ) {\n    let zoompanEffect = 'e_zoompan';\n\n    if ( typeof zoompan.options === 'string' ) {\n      zoompanEffect = `${zoompanEffect}${zoompan.options}`;\n    }\n\n    cldImage.effect(zoompanEffect);\n\n    let loopEffect;\n\n    if ( zoompan.loop === true ) {\n      loopEffect = 'e_loop';\n    } else if ( typeof zoompan.loop === 'string' ) {\n      loopEffect = `e_loop${zoompan.loop}`;\n    }\n\n    if ( loopEffect ) {\n      cldImage.effect(loopEffect);\n    }\n  }\n\n  if ( zoompan !== false ) {\n    overrides.format = 'gif';\n  }\n\n  return {\n    options: overrides\n  }\n}","import { Cloudinary } from '@cloudinary/url-gen';\n\nimport * as croppingPlugin from '../plugins/cropping';\nimport * as effectsPlugin from '../plugins/effects';\nimport * as overlaysPlugin from '../plugins/overlays';\nimport * as rawTransformationsPlugin from '../plugins/raw-transformations';\nimport * as removeBackgroundPlugin from '../plugins/remove-background';\nimport * as underlaysPlugin from '../plugins/underlays';\nimport * as zoompanPlugin from '../plugins/zoompan';\n\nimport {\n  primary as qualifiersPrimary,\n  text as qualifiersText,\n  position as qualifiersPosition\n} from '../constants/qualifiers';\n\nexport const transformationPlugins = [\n  // Background Removal must always come first\n  removeBackgroundPlugin,\n\n  croppingPlugin,\n  effectsPlugin,\n  overlaysPlugin,\n  underlaysPlugin,\n  zoompanPlugin,\n\n  // Raw transformations needs to be last simply to make sure\n  // it's always expected to applied the same way\n\n  rawTransformationsPlugin\n];\n\nlet cld;\n\n/**\n * constructCloudinaryUrl\n */\n\nexport function constructCloudinaryUrl({ options, config }) {\n  if ( !cld ) {\n    cld = new Cloudinary({\n      cloud: {\n        cloudName: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME\n      },\n      url: {\n        // Used to avoid issues with SSR particularly for the blurred placeholder\n        analytics: false\n      },\n      ...config\n    });\n  }\n\n  const publicId = getPublicId(options.src);\n\n  const cldImage = cld.image(publicId);\n\n  transformationPlugins.forEach(({ plugin }) => {\n    const { options: pluginOptions } = plugin({\n      cldImage,\n      options\n    }) || {};\n\n    if ( pluginOptions?.format ) {\n      options.format = pluginOptions.format;\n    }\n  });\n\n  return cldImage\n          .format(options.format || 'auto')\n          .delivery(`q_${options.quality || 'auto'}`)\n          .toURL();\n}\n\n/**\n * Retrieves the public id of a cloudiary image url. If no url is recognized it returns the parameter it self.\n * If it's recognized that is a url and it's not possible to get the public id, it warns the user.\n *\n * @param {string} src The cloudiary url or public id.\n *\n * @return {string} The images public id\n */\n\nexport function getPublicId(src) {\n  if ( typeof src !== 'string' ) {\n    throw new Error(`Invalid src of type ${typeof src}`);\n  }\n\n  if ( src.includes('res.cloudinary.com') ) {\n    const regexWithTransformations = /(https?)\\:\\/\\/(res.cloudinary.com)\\/([^\\/]+)\\/(image|video|raw)\\/(upload|authenticated)\\/(.*)\\/(v[0-9]+)\\/(.+)(?:\\.[a-z]{3})?/\n    const regexWithoutTransformations = /(https?)\\:\\/\\/(res.cloudinary.com)\\/([^\\/]+)\\/(image|video|raw)\\/(upload|authenticated)\\/(v[0-9]+)\\/(.+)(?:\\.[a-z]{3})?/\n\n    const withTransformations = src.match(regexWithTransformations)\n    const withoutTransformations = src.match(regexWithoutTransformations)\n\n    if ( withTransformations ) {\n      return withTransformations[withTransformations.length - 1]\n    } else if ( withoutTransformations ) {\n      return withoutTransformations[withoutTransformations.length - 1]\n    } else {\n      console.warn(`Not possible to retrieve the publicUrl from ${src}, make sure it's a valid cloudinary image url.`)\n    }\n  }\n\n  return src;\n}\n\n/**\n * createPlaceholderUrl\n */\n\nexport function createPlaceholderUrl({ src, placeholder = true, config }) {\n  const rawTransformations = [];\n\n  if ( placeholder === 'grayscale' ) {\n    rawTransformations.push('e_grayscale');\n  }\n\n  if ( typeof placeholder === 'string' && placeholder.includes('color:') ) {\n    const color = placeholder.split(':').splice(1).join(':')\n    rawTransformations.push('e_grayscale');\n    rawTransformations.push(`e_colorize:60,co_${color}`);\n  }\n\n  return constructCloudinaryUrl({\n    options: {\n      src,\n      width: 100,\n      quality: 1,\n      rawTransformations,\n    },\n    config\n  });;\n}\n","import { constructCloudinaryUrl } from '../lib/cloudinary';\n\nexport function cloudinaryLoader(defaultOptions, cldOptions, cldConfig = {}) {\n  return constructCloudinaryUrl({\n    options: {\n      ...defaultOptions,\n      ...cldOptions\n    },\n    config: cldConfig\n  });\n}","import Image from 'next/image';\n\nimport { createPlaceholderUrl, getPublicId, transformationPlugins } from '../../lib/cloudinary';\nimport { cloudinaryLoader } from '../../loaders/cloudinary-loader';\n\nconst CldImage = props => {\n\n  const CLD_OPTIONS = [];\n\n  transformationPlugins.forEach(({ props = [] }) => {\n    props.forEach(prop => {\n      if ( CLD_OPTIONS.includes(prop) ) {\n        throw new Error(`Option ${prop} already exists!`);\n      }\n      CLD_OPTIONS.push(prop);\n    });\n  })\n\n  // Construct the base Image component props by filtering out Cloudinary-specific props\n\n  const imageProps = {};\n\n  Object.keys(props)\n    .filter(key => !CLD_OPTIONS.includes(key))\n    .forEach(key => imageProps[key] = props[key]);\n\n  // Construct Cloudinary-specific props by looking for values for any of the supported prop keys\n\n  const cldOptions = {};\n\n  CLD_OPTIONS.forEach(key => {\n    if ( props[key] ) {\n      cldOptions[key] = props[key];\n    }\n  });\n\n  // If we see a placeholder option, configure a Cloudinary-based URL.\n  // The resulting image will always be blurred per Next.js, so we're\n  // limited on options for placeholders.\n  //\n  // We need to do this logic here as we potentially need to mutate\n  // an Image component prop as opposed to simply the URL\n  //\n  // https://nextjs.org/docs/api-reference/next/image#blurdataurl\n\n  if ( imageProps.placeholder ) {\n    const publicId = getPublicId(props.src);\n\n    imageProps.blurDataURL = createPlaceholderUrl({\n      src: publicId,\n      placeholder: props.placeholder\n    });\n\n    if ( imageProps.placeholder !== 'blur' ) {\n      imageProps.placeholder = 'blur';\n    }\n  }\n\n  return (\n    <Image\n      {...imageProps}\n      loader={(options) => cloudinaryLoader({ ...imageProps, options }, cldOptions)}\n    />\n  );\n}\n\nexport default CldImage;","import Head from 'next/head';\n\nconst IMAGE_WIDTH = 2400;\nconst IMAGE_HEIGHT = 1200;\n\nimport { constructCloudinaryUrl } from '../../lib/cloudinary';\n\nconst TWITTER_CARD = 'summary_large_image';\n\nconst CldOgImage = ({ excludeTags = [], twitterTitle, ...props }) => {\n  const options = {\n    ...props,\n    width: props.width || IMAGE_WIDTH,\n    height: props.height || IMAGE_HEIGHT,\n    crop: props.crop || 'fill',\n    gravity: props.gravity || 'center'\n  }\n\n  const ogImageUrl = constructCloudinaryUrl({\n    options\n  });\n\n  // We need to include the tags within the Next.js Head component rather than\n  // direcly adding them inside of the Head otherwise we get unexpected results\n\n  return (\n    <Head>\n      <meta property=\"og:image\" content={ogImageUrl} />\n      <meta property=\"og:image:secure_url\" content={ogImageUrl} />\n      <meta property=\"og:image:width\" content={options.width} />\n      <meta property=\"og:image:height\" content={options.height} />\n\n      {options.alt && (\n        <meta property=\"og:image:alt\" content={options.alt} />\n      )}\n\n      {/* Required for summary_large_image, exclude vai excludeTags */}\n      {/* https://developer.twitter.com/en/docs/twitter-for-websites/cards/overview/summary-card-with-large-image */}\n\n      {!excludeTags.includes('twitter:title') && (\n        <meta property=\"twitter:title\" content={twitterTitle || ' '} />\n      )}\n\n      <meta property=\"twitter:card\" content={TWITTER_CARD} />\n      <meta property=\"twitter:image\" content={ogImageUrl} />\n    </Head>\n  );\n}\n\nexport default CldOgImage;"],"names":["cropsGravityAuto","props","plugin","cldImage","options","width","height","crop","gravity","transformationString","includes","console","warn","resize","params","prop","effect","map","param","forEach","key","primary","aspectRatio","qualifier","position","angle","x","y","text","color","location","fontFamily","fontSize","fontWeight","letterSpacing","textDecoration","DEFAULT_TEXT_OPTIONS","overlays","type","typeQualifier","publicId","effects","layerEffects","_excluded","hasPublicId","hasText","hasPosition","layerTransformation","replace","applied","Object","keys","qualifiersPrimary","push","textTransformations","qualifiersText","join","qualifiersPosition","length","addTransformation","rawTransformations","transformation","removeBackground","underlays","zoompan","overrides","zoompanEffect","loopEffect","loop","format","transformationPlugins","removeBackgroundPlugin","croppingPlugin","effectsPlugin","overlaysPlugin","underlaysPlugin","zoompanPlugin","rawTransformationsPlugin","cld","constructCloudinaryUrl","config","Cloudinary","cloud","cloudName","process","env","NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME","url","analytics","getPublicId","src","image","pluginOptions","delivery","quality","toURL","Error","regexWithTransformations","regexWithoutTransformations","withTransformations","match","withoutTransformations","createPlaceholderUrl","placeholder","split","splice","cloudinaryLoader","defaultOptions","cldOptions","cldConfig","CldImage","CLD_OPTIONS","imageProps","filter","blurDataURL","_jsx","IMAGE_WIDTH","IMAGE_HEIGHT","TWITTER_CARD","CldOgImage","excludeTags","twitterTitle","ogImageUrl","_jsxs","alt"],"mappings":"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"}